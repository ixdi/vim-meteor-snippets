# Meteor snippets
snippet mth
	Template.${1:template_name}.helpers({
		${2}
	});
snippet mhf
	${1}(${2}) {
		${3}
	};
snippet mte
	Template.${1:template_name}.events({
		${2}
	});
snippet mef
	'${1}'(e, tpl) {
		e.preventDefault();
		${2}
	};
snippet mefd
	'${1}': _.debounce((e, tpl) => {
		e.preventDefault();
		${2}
	}, App.Settings.limitEventTime, true)${3}
snippet mtauto
	self.autorun((c) => {
		${1}
	});
snippet mtf
	self.${1} = (${2}) => {
		${3}
	};
snippet mpub
	Meteor.publish('${1}', function () {
		${2}
	});
snippet msub
	${1}.subscribe('${2}'${3});
snippet mstartup
	Meteor.startup(function () {
		${1}
	});
snippet mrh
	Template.registerHelper('${1}', (${2}) => {
		${3}
	});
snippet mrd
	FlowRouter.route('${1}', {
		name: '${2}',
		action(params, query) {
			'${3}'
		}
	});
snippet mrg
	FlowRouter.go('${1}');
snippet mrp
	FlowRouter.getParam('${1}');
snippet msset
	Session.set('${2:key}', ${3:value})${1}
snippet msget
	Session.get('${2:key}')${1}
snippet mseq
	Session.equals('${2:key}', ${3:value})${1}
snippet mcomm
	/*****************************************************************************/
	/* ${1} */
	/*****************************************************************************/
snippet mauto
	Tracker.autorun((c) => {
		${1}
	});
snippet misc
	if (Meteor.isClient) {
		${1}
	}
snippet miss
	if (Meteor.isServer) {
		${1}
	}
snippet mmt
	Meteor.methods({
	});
snippet mcall
	Meteor.call('${1}', (err) => {
		if (err) { 
			showError(err);
		}
		else {
			${2}
		}
	});
snippet mcol
	${1} = new Mongo.Collection('${2}');
snippet mtap
	i18n.__('${1}')
snippet merr
	throw new Meteor.Error('${1}');
snippet monr
	Template.${1}.onRendered(function() {
	  const self = this;
	  ${2}
	});
snippet monc
	Template.${1}.onCreated(function() {
	  const self = this;
	  ${2}
	});
snippet mond
	Template.${1}.onDestroyed(function() {
	  const self = this;
	  ${2}
	});
snippet mim 
	import { ${1} } from '${2}';
snippet mimd
	import { ${1} } from '/imports/api/definitions.js';
snippet mimh
	import { ${1} } from '/imports/startup/client/hlp-cli-common.js';

# Some useful Unicode entities
# Non-Breaking Space
snippet nbs
	&nbsp;
# ←
snippet left
	&#x2190;
# →
snippet right
	&#x2192;
# ↑
snippet up
	&#x2191;
# ↓
snippet down
	&#x2193;
# ↩
snippet return
	&#x21A9;
# ⇤
snippet backtab
	&#x21E4;
# ⇥
snippet tab
	&#x21E5;
# ⇧
snippet shift
	&#x21E7;
# ⌃
snippet ctrl
	&#x2303;
# ⌅
snippet enter
	&#x2305;
# ⌘
snippet cmd
	&#x2318;
# ⌥
snippet option
	&#x2325;
# ⌦
snippet delete
	&#x2326;
# ⌫
snippet backspace
	&#x232B;
# ⎋
snippet esc
	&#x238B;
# comment
snippet //
	<!-- ${0} -->
