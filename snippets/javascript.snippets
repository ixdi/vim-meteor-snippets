snippet thl
	Template.${1:template_name}.helpers({
		${2}
	});
snippet hf
	${1}(${2}) {
		${3}
	};
snippet tev
	Template.${1:template_name}.events({
		${2}
	});
snippet ef
	'${1}'(e, tpl) {
		e.preventDefault();
		${2}
	};
snippet efd
	'${1}': _.debounce((e, tpl) => {
		e.preventDefault();
		${2}
	}, App.Settings.limitEventTime, true)${3}
snippet tauto
	self.autorun((c) => {
		${1}
	});
snippet tfunc
	self.${1} = (${2}) => {
		${3}
	};
snippet pub
	Meteor.publish('${1}', function () {
		${2}
	});
snippet sub
	${1}.subscribe('${2}'${3});
snippet startup
	Meteor.startup(function () {
		${1}
	});
snippet ghl
	Template.registerHelper('${1}', (${2}) => {
		${3}
	});
snippet rr
	FlowRouter.route('${1}', {
		name: '${2}',
		action(params, query) {
			'${3}'
		}
	});
snippet rgo
	FlowRouter.go('${1}');
snippet rgp
	FlowRouter.getParam('${1}');
snippet sset
	Session.set('${2:key}', ${3:value})${1}
snippet sget
	Session.get('${2:key}')${1}
snippet seq
	Session.equals('${2:key}', ${3:value})${1}
snippet comm
	/*****************************************************************************/
	/* ${1} */
	/*****************************************************************************/
snippet auto
	Tracker.autorun((c) => {
		${1}
	});
snippet isclient
	if (Meteor.isClient) {
		${1}
	}
snippet isserver
	if (Meteor.isServer) {
		${1}
	}
snippet mt
	Meteor.methods({
	});
snippet mtf
	[${1}]: function (args) {
		${2}.validate.call(this, args);
		${2}.run.call(this, args);
	}
snippet mta
	${1} = new ValidatedMethod({
		name: '${2}',
		validate: new SimpleSchema({
			${3}
		}).validator(),
		run({ ${4} }) {
			${5}
		}
	});
snippet mcall
	Meteor.call('${1}', (err) => {
		if (err) { ${2} }
		else {
				${3}
	  }
	});
snippet col
	${1} = new Mongo.Collection('${2}');
snippet tap
	TAPi18n.__('${1}')
snippet serr
	throw new Meteor.Error('${1}');
snippet onr
	Template.${1}.onRendered(function() {
	  const self = this;
	  ${2}
	});
snippet onc
	Template.${1}.onCreated(function() {
	  const self = this;
	  ${2}
	});
snippet ond
	Template.${1}.onDestroyed(function() {
	  const self = this;
	  ${2}
	});
snippet imp 
	import { ${1} } from '${2}';
snippet im
	import { Meteor } from 'meteor/meteor';
snippet itmpl
	import { Template } from 'meteor/templating';
